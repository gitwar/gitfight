#!/bin/bash

# Gracefully shutdown game
function closeGame {
  echo
  echo
  echo "GOODBYE!"
  echo
  exit
}

trap "closeGame;" INT

function performAttack {
  hit=0
  if [ "$1" = "J" ]; then
    # Jab
    # 80% chance
    # Between 8-10 hit points
    rand=$[ ( $RANDOM % 10 ) + 1 ]
    if [ "$rand" -gt 3 ]; then
      hit=$[ ( $RANDOM % 3 ) + 8 ]
      attackResult="HIT $hit"
    else
      attackResult="MISS"
    fi
  elif [ "$1" = "L" ]; then
    # Left Hook
    # 70% chance
    # Between 15-20 hit points
    rand=$[ ( $RANDOM % 10 ) + 1 ]
    if [ "$rand" -gt 4 ]; then
      hit=$[ ( $RANDOM % 6 ) + 15 ]
      attackResult="HIT $hit"
    else
      attackResult="MISS"
    fi
  elif [ "$1" = "U" ]; then
    # Uppercut
    # 60% chance
    # Between 20-25 hit points
    rand=$[ ( $RANDOM % 10 ) + 1 ]
    if [ "$rand" -gt 6 ]; then
      hit=$[ ( $RANDOM % 6 ) + 20 ]
      attackResult="HIT $hit"
    else
      attackResult="MISS"
    fi
  else
    # Haymaker
    # 40% chance
    # Between 30-35 hit points
    rand=$[ ( $RANDOM % 10 ) + 1 ]
    if [ "$rand" -gt 7 ]; then
      hit=$[ ( $RANDOM % 6 ) + 30 ]
      attackResult="HIT $hit"
    else
      attackResult="MISS"
    fi
  fi
  if [ "$hit" != "0" ]; then
    echo "HIT!"
    opponentScore=`expr $opponentScore - $hit`
    echo "$opponent's health is now $opponentScore"
  else
    echo "MISS!"
    echo "$opponent's health is still $opponentScore"
  fi
}

function calculateScores {
  opponentScore=100
  myScore=100
  while read line; do
    if ! [ -z "$line" ]; then
      myLine=`echo "$line" | grep "$me"`
      opponentLine=`echo "$line" | grep "$opponent"`
      if ! [ -z "$myLine" ]; then
        # my lines log the damage done to opponent
        hit=`echo "$line" | cut -d, -f4 | cut -d" " -f1`
        damage=`echo "$line" | cut -d"," -f4 | cut -d" " -f2`
        if [ "$hit" = "HIT" ]; then
          opponentScore=`expr $opponentScore - $damage`
        fi
      elif ! [ -z "$opponentLine" ]; then
        # opponent lines log the damage done to myself
        hit=`echo "$line" | cut -d, -f4 | cut -d" " -f1`
        damage=`echo "$line" | cut -d"," -f4 | cut -d" " -f2`
        if [ "$hit" = "HIT" ]; then
          myScore=`expr $myScore - $damage`
        fi
      else
        echo
        echo "There was an error processing the git log."
        echo
        exit
      fi
    fi
  done < <( echo "$log" )
}

function checkGameOver {
  if [[ "$myScore" -lt "0" || "$opponentScore" -lt "0" ]]; then
    echo "GAME OVER!"
    echo
    if [ "$myScore" -gt "$opponentScore" ]; then
      echo "$me WINS!"
    else
      echo "$opponent WINS!"
    fi
    echo
    # Someone's health is 0
    echo "$me's health: $myScore"
    echo "$opponent's health: $opponentScore"
    echo
    echo "If you'd like to play again excute './gitwar -c'"
    echo

    getRecentEvent
    ./gitwar -s "$recentEvent"
    exit
  fi
}

function printRound {
  round=`echo "$log" | wc -l`
  round=`expr "$round" / 2 + "$round" % 2`
  if [[ "$myScore" -ge "0" && "$opponentScore" -ge "0" ]]; then
    echo "[ROUND $round]"
    echo "$me's health: $myScore"
    echo "$opponent's health: $opponentScore"
    echo
  else
    checkGameOver
  fi
}

function getRecentEvent {
  opponentMove=`./gitwar -l -tail`
  checkOpponent=`echo "$opponentMove" | cut -d, -f2`
  action=`echo "$opponentMove" | cut -d, -f3`
  article="a"
  if [ "$action" = "J" ]; then
    action="JAB"
  elif [ "$action" = "H" ]; then
    action="HAYMAKER"
  elif [ "$action" = "L" ]; then
    action="LEFT HOOK"
  else
    article="an"
    action="UPPERCUT"
  fi
  result=`echo "$opponentMove" | cut -d, -f4 | cut -d" " -f1`
  if [ "$result" = "HIT" ]; then
    damage=`echo "$opponentMove" | cut -d, -f4 | cut -d" " -f2`
  else
    damage="0"
  fi
  if [ "$result" = "HIT" ]; then
    recentEvent="$opponent HIT! Threw $article $action and knocked $damage points off $me's health."
    recentEventYours="$opponent HIT! Threw $article $action and knocked $damage points off your health."
  else
    recentEvent="$opponent MISSED! Threw $article $action and knocked $damage points off your health."
    recentEventYours="$opponent MISSED! Threw $article $action and knocked $damage points off your health."
  fi
}

function loop {
  while [ 1 = 1 ]; do
    getRecentEvent
    echo $recentEventYours
    echo

    calculateScores
    printRound

    attack=''
    while [[ "$attack" != "J" && "$attack" != "H" && "$attack" != "U" && "$attack" != "L" ]]; do
      if ! [ -z "$attack" ]; then
        echo
        echo "Incorrect attack syntax. Please try again."
      fi
      echo "How would you like to attack?"
      echo "H - Haymaker, U - Uppercut"
      echo -n "L - Left Hook, J - Jab: "
      read attack
    done
    echo

    performAttack $attack
    echo "`date "+%b %d %Y:"` $recentEvent" >> gitwar.log
    echo

    # Call gitwar to give opponent a turn
    getRecentEvent
    checkGameOver
    ./gitwar "$recentEvent" "$attack,$attackResult"
    log=`./gitwar -l`

    echo
  done
}

echo
echo "Loading..."
./gitwar -p

echo
echo -n "[GITFIGHT!] "

# Initialize some stuff
log=`./gitwar -l`
me=`git config "user.name"`
users=`cat gitwar.users`

# Check that the user can play and get the opponent's score
user1=`echo $users | cut -d, -f1`
user2=`echo $users | cut -d, -f2`
if [ "$me" = "$user1" ]; then
  opponent="$user2"
elif [ "$me" = "$user2" ]; then
  opponent="$user1"
else
  echo "You are not a player in this game. Check your git config for your 'user.name' setting. It should match one of the names in the gitwar.users file"
  echo
  exit
fi

echo "$me vs. $opponent"
echo

calculateScores
printRound

# If the player actually belongs in the game welcome them and
# ask what attack they'd like to perform
echo "Welcome back $me!"
echo

justWent=`./gitwar -l -tail | grep $me`

if ! [ -z "$justWent" ]; then
  echo "Looks like it's not your turn. Please wait for your opponent to attack..."
  echo
  # Call gitwar to wait for opponent
  ./gitwar -w
  log=`./gitwar -l`

  echo

  loop
else
  attack=''
  while [[ "$attack" != "J" && "$attack" != "H" && "$attack" != "U" && "$attack" != "L" ]]; do
    if ! [ -z "$attack" ]; then
      echo
      echo "Incorrect attack syntax. Please try again."
    fi
    echo "How would you like to attack?"
    echo "H - Haymaker, U - Uppercut"
    echo -n "L - Left Hook, J - Jab: "
    read attack
  done
  echo

  performAttack $attack
  echo "`date "+%b %d %Y:"` $recentEvent" >> gitwar.log
  echo

  # Call gitwar to give opponent a turn
  getRecentEvent
  checkGameOver
  ./gitwar "$recentEvent" "$attack,$attackResult"
  log=`./gitwar -l`

  echo

  loop
fi
